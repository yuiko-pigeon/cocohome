/**
 * Cope with theme.json
 */

// 通常幅のカバーでコンテンツ幅を利用する中に幅広を入れられた場合 ****************/

// コアのCSSが
// .is-layout-constrained > :where(:not(.alignleft):not(.alignright):not(.alignfull)) {
//     max-width: var(--wp--style--global--content-size);
//     margin-left: auto !important;
//     margin-right: auto !important;
// }
// を入れてくる。
// これはコアは標準で全幅だが、Lightning はコンテンツ幅が前提なのでマイナスオフセットしなくてはいけないので上書きする。

// 通常幅の中の要素の時（ 通常幅 > .is-layout-constrained > .alignwide ）にマイナスオフセットする必要があるが、
// カバーブロックでは第一階層の alignfull, alignwide に直接 .is-layout-constrained がついてしまうので、
// alignfull, alignwide を除外している
*:where(:not(.alignfull,.alignwide)) > .is-layout-constrained:where(:not(.alignfull,.alignwide)) > .alignwide {
		margin-left: calc( ( 100% - var(--vk-width-full) ) / 4 ) !important;
		margin-right: calc( ( 100% - var(--vk-width-full) ) / 4 ) !important;
}

 // theme.json を追加すると a:where(:not(.wp-element-button)){ text-decoration: underline; } が追加されるため打ち消し
 a{
	&.postListText_singleTermLabel_inner,
	&.vk_gridcolcard_item_container {
		text-decoration: none;
	}
}

// 6.1 with theme.json CSS *******************************************/

// Core CSS /////////////////////////////
// body .is-layout-flow > * + * {
//     margin-block-start: 24px;
//     margin-block-end: 0;
// }

// Core CSS /////////////////////////////
// body .is-layout-constrained > * + * {
//     margin-block-start: 24px;
//     margin-block-end: 0;
// }

body .container .is-layout-flow > * + *,
body .is-layout-constrained > * + * {
	margin-block-start: unset;
	&:where(:not(:is(h1,h2,h3,h4,h5,h6,.vk_button))){ //vk_buttonが隣接した時、2個目以降のmargin-bottomが効かなくなるので.vk_buttonを追加
		margin-block-end: unset;
	}
}

// Core CSS /////////////////////////////
// body .is-layout-flow > * {
//     margin-block-start: 0;
//     margin-block-end: 0;
// }
// body .is-layout-constrained > * {
//     margin-block-start: 0;
//     margin-block-end: 0;
// }

// h タグには --vk-margin-headding-bottom 指定追加
body :is( .is-layout-flow, .is-layout-constrained ) > *:is(h1,h2,h3,h4,h5,h6 ) {
	margin-block-end:var(--vk-margin-headding-bottom);
}

body .container :is( .is-layout-flow, .is-layout-constrained ) {
	.wp-block-table,
	p,
	ul:where(:not([class*="wp-block-navigation"])),
	ol,
	dl,
	blockquote,
	iframe {
		&:where(:not(:last-child)){
			margin-block-end: var(--vk-margin-element-bottom);
		}
	}
}

// 6.0 with theme.json CSS *******************************************/

// Core CSS /////////////////////////////
// .wp-container-1 > * + * {
//     margin-block-start: var( --wp--style--block-gap );
//     margin-block-end: 0;
// }

div[class*=wp-container-] > * + * {
	margin-block-start:unset;
}
// h タグには --vk-margin-headding-bottom 指定追加
*[class*=wp-container-] > * + *:is(h1,h2,h3,h4,h5,h6){
	margin-block-end:var(--vk-margin-headding-bottom);
}

// Core CSS /////////////////////////////
// .wp-container-1 > * {
//     margin-block-start: 0;
//     margin-block-end: 0;
// }
.wp-block-column,
.wp-block-group:where(:not(.is-layout-flex)) { // 6.0 で追加された is-layout-flex は除外
	&[class*=wp-container-] > :is( p,ul,ol,dl ) {
		margin-block-start:unset;
		margin-block-end:var(--vk-margin-element-bottom);
	}
}
// h タグには --vk-margin-headding-bottom 指定追加
*[class*=wp-container-] > *:is(h1,h2,h3,h4,h5,h6){
	margin-block-end:var(--vk-margin-headding-bottom);
}

// Core CSS /////////////////////////////
// .wp-container-1 {
//     display: flex;
//     gap: var( --wp--style--block-gap, 0.5em );
// }
.wp-block-gallery {
	--wp--style--block-gap:0.5em; // theme.json がないと24pxがはいるが、ない場合は 0.5em だったので継承するための補正
}

// 特定の独自ブロック・クラスの補正 *******************************************/

p:is(.postListText_title,.vk_heading_subtext,.no-margin ){
	--vk-margin-element-bottom:0;
}
